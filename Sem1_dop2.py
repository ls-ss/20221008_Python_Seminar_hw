''' Дополнительная задача. Sem1_dop2.
    * Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
    Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
    Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
    Внимание: использовать только арифметические операции!
    К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых
    делится нацело на 7.
    * Решить задачу под пунктом b, не создавая новый список.
'''
def summ_div7(list):
    summ = 0
    for i in range(len(list)):
        n = 0
        for j in str(list[i]):
            n += int(j)

        if n % 7 == 0:
            summ += list[i]
    return summ

#1 Создать список, состоящий из кубов нечётных чисел от 1 до 1000
list = []
for i in range(1, 1000, 2):
    list.append(i**3)

#2 Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.

print(f'Сумма элементов списка list по первому условию: {summ_div7(list)}')

#3 К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых
#  делится нацело на 7.

for i in range(len(list)):
    list[i] += 17

print(f'Сумма элементов списка list по второму условию: {summ_div7(list)}')
