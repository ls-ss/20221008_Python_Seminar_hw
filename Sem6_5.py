''' Sem6_5. Создать список, содержащий цены на товары (10–20 товаров), например:
    [57.8, 46.51, 97, ...]

    Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп
    (например «5 руб 04 коп»).
    Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек
    (должно быть 07 коп или 00 коп).

    Вывести цены, отсортированные по возрастанию, новый список не создавать
    (доказать, что объект списка после сортировки остался тот же).

    Создать новый список, содержащий те же цены, но отсортированные по убыванию.
    Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
'''
import random as rd

# Создаем список цен и заполняем его значениями от 0..100 руб. включая копейки (Формат вывода рр.кк).
list_price = []
for i in range(10):
    list_price.append(rd.randint(0, 10000) / 100)
print('list_price: ', list_price)

# Вывести на экран список цен в формате <r> руб <kk> коп
# Подавить нули. Если получилось 7 или 0 копеек - Вывести 07 коп или 00 коп)
for price in list_price:
    rub = str(int(price//1)) # Формируем рубли

    # Формируем копейки
    if str(price)[-2] == '.':
        penny = str(price)[-1] + '0'
    else:
        penny = str(price)[-2] + str(price)[-1]
    print(rub + ' руб ' + penny + ' коп', end=', ') # Выводим цену
print()

# Создаем новый список и работаем с ним. Исходный не трогаем, т.к. нам он нужен
list_price_new = list_price
list_price_new.sort()

# Вывести цены, отсортированные по возрастанию, новый список не создавать
# Доказать, что объект списка после сортировки остался тот же.
print('list_price_new: ', list_price_new)
list_price_new = [1]                        # Изменяем список
print('list_price_new: ', list_price_new)

print('Проверка равенства содержимого объектов: ', list_price_new == [1]) # Проверка равенства содержимого объектов
print('Проверка индентичности объектов: ', list_price_new is [1]) # Проверка индентичности объектов


# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

list_price_descending = sorted(list_price, reverse=True)

# list_price отсортированный, т.к. list_price и list_price_new были индентичны до присваивания list_price_new = [1]
print('list_price: ', list_price)
print('Новый список, содержащий те же цены отсортированные по убыванию:', list_price_descending)

# Вывести цены пяти самых дорогих товаров.
print('Цены пяти самых дорогих товаров', list_price_descending[0:5])
