''' Семинар 9. Задача 1. Напишите класс TicTacToeBoard для игры в крестики-нолики, который должен иметь следующие методы:
        new_game() – для создания новой игры;
        get_field() – для получения поля (список списков);
        check_field() – для проверки, есть ли победитель, который возвращает:
            X, если победил первый игрок,
            0, если второй,
            D, если ничья
            None, если можно продолжать игру;
        make_move(row, col) – который устанавливает значение текущего хода в ячейку поля с координатами row, col, если
        это возможно, «переключает» ход игрока, а также возвращает сообщение:
            «Победил игрок X» при победе крестиков,
            «Победил игрок 0» при победе ноликов,
            «Ничья» в случае ничьей и
            «Продолжаем играть», если победитель после данного хода неопределён.
        Кроме того, метод make_move должен возвращать сообщение:
            «Клетка <row>, <col> уже занята», если в клетке уже стоит крестик или нолик, и
            «Игра уже завершена», если в текущей игре уже выявлен победитель или закончились ячейки для ходов.

        При создании объекта класса должна создаваться новая игра.
        Аргументы row и col метода make_move могут принимать значения от 1 до 3.
'''
import tick_tack_toe

def main():
    board = tick_tack_toe.TicTacToeBoard.new_game()
    while(True):
        print(*board.get_field(), sep="\n")
        fl = -1
        while(fl == -1):
            print(f"Ход: {board.active}")
            row, column = map(int, input('Введите через пробел строку, столбец: ').split())
            fl = board.make_move(row - 1, column - 1)

        if fl == 0:
            break

    print(*board.get_field(), sep="\n")
    tick_tack_toe.TicTacToeBoard.n = 0
    input('Начать игру еще раз ("Enter"): ')
    main()

main()
